/* ********************************************************************* *
 *                                                                       *
 *   =============================================================       *
 *   Copyright 2002-2010,                                                *
 *   Christos Sioutis <christos.sioutis@gmail.com>                       *
 *   =============================================================       *
 *   This software was developed during my PhD studies at:               *
 *                                                                       *
 *   Knowledge Based Intelligent Engineering Systems Centre (KES)        *
 *   School of Electrical and Information Engineering                    *
 *   University of South Australia                                       *
 *   =============================================================       *
 *                                                                       *
 *   This file is part of utji.                                          *
 *                                                                       *
 *   utji is free software: you can redistribute it and/or               *
 *   modify it under the terms of the GNU Lesser General Public License  *
 *   as published by the Free Software Foundation, either version 3 of   *
 *   the License, or (at your option) any later version.                 *
 *                                                                       *
 *   utji is distributed in the hope that it will be useful,             *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of      *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
 *   GNU Lesser General Public License for more details.                 *
 *                                                                       *
 *   You should have received a copy of the GNU Lesser General Public    *
 *   License along with utji.                                            *
 *   If not, see <http://www.gnu.org/licenses/>.                         *
 *                                                                       *
 * ********************************************************************* */
 
package edu.unisa.gamebots.domdefender;

import java.util.*;
import java.io.*;


import edu.unisa.gamebots.utjackinterface.*;
import edu.unisa.gamebots.utjackinterface.controller.*;
import edu.unisa.gamebots.utjackinterface.caps.sync.*;
import edu.unisa.gamebots.utjackinterface.caps.async.*;

import edu.unisa.gamebots.domdefender.caps.explore2.*;
import edu.unisa.gamebots.domdefender.caps.domdefend.*;


public agent DomDefender extends UtJackBot
{		
	#has capability UtSyncCap snc;
	#has capability UtAsyncCap asnc;
	//the UT interface view	**************************************************************
	#private data UtJackInterface ut(snc.self, snc.game, snc.players,
                                         snc.navs, snc.movs, snc.doms,
                                         snc.flags, snc.invs, asnc.async);
	// ***********************************************************************************
        String server;
        
	#posts event  UtJumpEvent jev;	
	#handles event UtJumpEvent;
	#uses plan UtJumpPlan;

	#posts event ExploreAndDefendEvent edEv;
	#handles event ExploreAndDefendEvent;
	#uses plan ExploreAndDefendPlan;     
	
	//#handles event UtNewNavEvent newNavEv;
	#private data NavsToExplore toExpl();        
	#posts event ExploreEvent exploreEv;
	#has capability ExploreCap exploreCap;	
	
	#posts event DomDefendEvent ddEv;
	#has capability DomDefendCap domdefCap;
        

	public DomDefender(String name, int team, String serverName)
	{
		super(name, team);
                this.server = serverName;
	}
	
        public void connect(){
		connect(ut, server);
		say(utName + "- I am in the game", true);                
        }


	
	
	public void explore(int exploreNum)
	{
		postEventAndWait(exploreEv.explore(exploreNum));
	}
	
	public void exploreAndDefend(int exploreNum, int defendNum)
	{
		postEventAndWait(edEv.exploreAndDefend(exploreNum, defendNum));
		System.out.println("Mission Accomplished!");
		System.exit(0);
	}
	
	public void jumpAlways()
	{
		postEvent(jev.jump(ut, true));
	}
	
	public void jump()
	{
		postEvent(jev.jump(ut));
	}
	
}
