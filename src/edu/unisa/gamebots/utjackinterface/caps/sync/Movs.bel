/* ********************************************************************* *
 *                                                                       *
 *   =============================================================       *
 *   Copyright 2002-2010,                                                *
 *   Christos Sioutis <christos.sioutis@gmail.com>                       *
 *   =============================================================       *
 *   This software was developed during my PhD studies at:               *
 *                                                                       *
 *   Knowledge Based Intelligent Engineering Systems Centre (KES)        *
 *   School of Electrical and Information Engineering                    *
 *   University of South Australia                                       *
 *   =============================================================       *
 *                                                                       *
 *   This file is part of utji.                                          *
 *                                                                       *
 *   utji is free software: you can redistribute it and/or               *
 *   modify it under the terms of the GNU Lesser General Public License  *
 *   as published by the Free Software Foundation, either version 3 of   *
 *   the License, or (at your option) any later version.                 *
 *                                                                       *
 *   utji is distributed in the hope that it will be useful,             *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of      *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
 *   GNU Lesser General Public License for more details.                 *
 *                                                                       *
 *   You should have received a copy of the GNU Lesser General Public    *
 *   License along with utji.                                            *
 *   If not, see <http://www.gnu.org/licenses/>.                         *
 *                                                                       *
 * ********************************************************************* */

package edu.unisa.gamebots.utjackinterface.caps.sync;

import edu.unisa.gamebots.utjackinterface.controller.*;
import java.util.*;

public beliefset Movs extends ClosedWorld
{
	#key field String id;
	#value field UtCoordinate location;
	#value field boolean reachable;
	#value field boolean damageTrig;
	#value field String moverClass;
	#value field boolean viewable;
	
	#indexed query movsInfo(logical String id, logical UtCoordinate location, 
				logical boolean reachable, logical boolean damageTrig,
				logical String moverClass, logical boolean viewable);

	#indexed query movsInfo(String id, logical UtCoordinate location, 
				logical boolean reachable, logical boolean damageTrig,
				logical String moverClass, logical boolean viewable);

	#indexed query reachableMovs(logical String id, logical UtCoordinate location, 
				     boolean reachable, logical boolean damageTrig,
				     logical String moverClass, logical boolean viewable);

	#indexed query reachableMovs(logical String id, logical UtCoordinate location, 
				     boolean reachable, logical boolean damageTrig,
				     logical String moverClass, boolean viewable);


        #function query public List getInfo(){
            logical String id;
            logical UtCoordinate location;
            logical boolean reachable;
            logical boolean damageTrig;
            logical String moverClass;
            logical boolean viewable;
            LinkedList list = new LinkedList();
            Cursor c = movsInfo(id,location,reachable,damageTrig,moverClass,viewable);
            while(c.next()){
                list.add(new UtMov(id.as_string(),(UtCoordinate)location.as_object(),reachable.as_boolean(),damageTrig.as_boolean(),moverClass.as_string(),viewable.as_boolean()));
            }
            return list;
        }

        #function query public List getReachableMovs(boolean reachable){
            logical String id;
            logical UtCoordinate location;
            logical boolean damageTrig;
            logical String moverClass;
            logical boolean viewable;
            LinkedList list = new LinkedList();
            Cursor c = reachableMovs(id,location,reachable,damageTrig,moverClass,viewable);
            while(c.next()){
                list.add(new UtMov(id.as_string(),(UtCoordinate)location.as_object(),reachable,damageTrig.as_boolean(),moverClass.as_string(),viewable.as_boolean()));
            }
            return list;
        }

        #function query public List getReachableMovs(boolean reachable, boolean viewable){
            logical String id;
            logical UtCoordinate location;
            logical boolean damageTrig;
            logical String moverClass;
            LinkedList list = new LinkedList();
            Cursor c = reachableMovs(id,location,reachable,damageTrig,moverClass,viewable);
            while(c.next()){
                list.add(new UtMov(id.as_string(),(UtCoordinate)location.as_object(),reachable,damageTrig.as_boolean(),moverClass.as_string(),viewable));
            }
            return list;
        }

}
