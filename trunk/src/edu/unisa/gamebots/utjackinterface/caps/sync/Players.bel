/* ********************************************************************* *
 *                                                                       *
 *   =============================================================       *
 *   Copyright 2002-2010,                                                *
 *   Christos Sioutis <christos.sioutis@gmail.com>                       *
 *   =============================================================       *
 *   This software was developed during my PhD studies at:               *
 *                                                                       *
 *   Knowledge Based Intelligent Engineering Systems Centre (KES)        *
 *   School of Electrical and Information Engineering                    *
 *   University of South Australia                                       *
 *   =============================================================       *
 *                                                                       *
 *   This file is part of utji.                                          *
 *                                                                       *
 *   utji is free software: you can redistribute it and/or               *
 *   modify it under the terms of the GNU Lesser General Public License  *
 *   as published by the Free Software Foundation, either version 3 of   *
 *   the License, or (at your option) any later version.                 *
 *                                                                       *
 *   utji is distributed in the hope that it will be useful,             *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of      *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
 *   GNU Lesser General Public License for more details.                 *
 *                                                                       *
 *   You should have received a copy of the GNU Lesser General Public    *
 *   License along with utji.                                            *
 *   If not, see <http://www.gnu.org/licenses/>.                         *
 *                                                                       *
 * ********************************************************************* */

package edu.unisa.gamebots.utjackinterface.caps.sync;

import edu.unisa.gamebots.utjackinterface.controller.*;
import java.util.*;

public beliefset Players extends ClosedWorld
{
	#key field String id;
	#value field boolean altFiring;
	#value field boolean firing;
	#value field String name;
	#value field UtCoordinate rotation;
	#value field UtCoordinate location;
	#value field UtCoordinate velocity;
	#value field int team;
	#value field boolean reachable;
	#value field String weapon;
	#value field boolean viewable;
	
	#indexed query playerInfo(	String id, 			logical boolean altFiring,
					logical boolean firing, 	logical String name,
					logical UtCoordinate rotation,	logical UtCoordinate location,
					logical UtCoordinate velocity,	logical int team,
					logical boolean reachable,	logical String weapon,
					logical boolean viewable);

	#indexed query allPlayers(	logical String id, 		logical boolean altFiring,
					logical boolean firing, 	logical String name,
					logical UtCoordinate rotation,	logical UtCoordinate location,
					logical UtCoordinate velocity,	logical int team,
					logical boolean reachable,	logical String weapon,
					logical boolean viewable);

	#indexed query reachablePlayers(logical String id, 		logical boolean altFiring,
					logical boolean firing, 	logical String name,
					logical UtCoordinate rotation,	logical UtCoordinate location,
					logical UtCoordinate velocity,	logical int team,
					boolean reachable,              logical String weapon,
					logical boolean viewable);

	#indexed query reachablePlayers(logical String id, 		logical boolean altFiring,
					logical boolean firing, 	logical String name,
					logical UtCoordinate rotation,	logical UtCoordinate location,
					logical UtCoordinate velocity,	logical int team,
					boolean reachable,              logical String weapon,
					boolean viewable);
					

        #function query public List getInfo(){
            logical String id;
            logical boolean altFiring;
            logical boolean firing;
            logical String name;
            logical UtCoordinate rotation;
            logical UtCoordinate location;
            logical UtCoordinate velocity;
            logical int team;
            logical boolean reachable;
            logical String weapon;
            logical boolean viewable;
            LinkedList list = new LinkedList();
            Cursor c = allPlayers(id,altFiring,firing,name,rotation,location,velocity,team,reachable,weapon,viewable);
            while(c.next()){
                list.add(new UtPlayer(altFiring.as_boolean(),firing.as_boolean(),id.as_string(),name.as_string(),
                         (UtCoordinate)rotation.as_object(),(UtCoordinate)location.as_object(),(UtCoordinate)velocity.as_object(),team.as_int(),reachable.as_boolean(),weapon.as_string(),viewable.as_boolean()));
            }
            return list;
        }

        #function query public List getReachablePlayers(boolean reachable){
            logical String id;
            logical boolean altFiring;
            logical boolean firing;
            logical String name;
            logical UtCoordinate rotation;
            logical UtCoordinate location;
            logical UtCoordinate velocity;
            logical int team;
            logical String weapon;
            logical boolean viewable;
            LinkedList list = new LinkedList();
            Cursor c = reachablePlayers(id,altFiring,firing,name,rotation,location,velocity,team,reachable,weapon,viewable);
            while(c.next()){
                list.add(new UtPlayer(altFiring.as_boolean(),firing.as_boolean(),id.as_string(),name.as_string(),
                         (UtCoordinate)rotation.as_object(),(UtCoordinate)location.as_object(),(UtCoordinate)velocity.as_object(),team.as_int(),reachable,weapon.as_string(),viewable.as_boolean()));
            }
            return list;
        }

        #function query public List getReachablePlayers(boolean reachable, boolean viewable){
            logical String id;
            logical boolean altFiring;
            logical boolean firing;
            logical String name;
            logical UtCoordinate rotation;
            logical UtCoordinate location;
            logical UtCoordinate velocity;
            logical int team;
            logical String weapon;
            LinkedList list = new LinkedList();
            Cursor c = reachablePlayers(id,altFiring,firing,name,rotation,location,velocity,team,reachable,weapon,viewable);
            while(c.next()){
                list.add(new UtPlayer(altFiring.as_boolean(),firing.as_boolean(),id.as_string(),name.as_string(),
                         (UtCoordinate)rotation.as_object(),(UtCoordinate)location.as_object(),(UtCoordinate)velocity.as_object(),team.as_int(),reachable,weapon.as_string(),viewable));
            }
            return list;
        }

        

}
